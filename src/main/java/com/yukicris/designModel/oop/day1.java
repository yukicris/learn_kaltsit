package com.yukicris.designModel.oop;

public class day1 {
    /**
     * 开闭原则：对扩展开发，对修改关闭（当需求需要改变的时候，尽量去扩展）
     *
     * 里氏替换原则： 继承必须确保超类所拥有的性质在子类中仍然成立（尽量不重写父类的方法）
     *
     * 依赖倒置原则： 要面向接口编程，不要面向实现编程
     *
     * 单一职责原则： 控制类的粒度大小，将对象解耦，提高其内聚性（一个对象不应该担任太多的职责，原子性，单一的方法做单一的事情）
     *
     * 接口隔离原则： 要为各个类建立他们需要的专用接口
     *
     * 迪米特法则： 只与你的直接朋友交谈，不跟“陌生人”说话，降低代码之间的耦合度
     *
     * 合成复用原则： 尽量先使用组合或者聚合等关联关系来实现，其次才考虑使用继承关系来实现
     * ————————————————
     * 版权声明：本文为CSDN博主「fggsgnhz」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
     * 原文链接：https://blog.csdn.net/fggsgnhz/article/details/115361803
     */
}
