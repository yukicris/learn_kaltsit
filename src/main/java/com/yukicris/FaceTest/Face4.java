package com.yukicris.FaceTest;

public class Face4 {
    public static void main(String[] args) {
        // 有个这个包装类的问题
        Short a = 1;
        short b = 1;
        float c = 1;
        Float d = 1f;
        int e = 1;
        Integer f = 1;
        Double g = 1d;
        double h = 1;

        //boolean占1或4字节,本质是一位(0/1),但是最小处理单元为字节,boolean数组形式是1字节,单独拿来用,变成int,就是4字节
    }


    // 事务有哪几种类型

   /* 1.JDBC事务

    用 Connection 对象控制，JDBC 的 Connection 接口提供了两种事务模式：自动提交、手工提交。

    2.JTA(Java Transaction API)事务
    JTA是一种高层的，与实现无关的，与协议无关的API，应用程序和应用服务器可以使用JTA来访问事务。
    JTA允许应用程序执行分布式事务处理--在两个或多个网络计算机资源上访问并且更新数据，这些数据可以分布在多个数据库上。
    JDBC驱动程序的JTA支持极大地增强了数据访问能力。
    3.容器事务

    容器事务主要是J2EE应用服务器提供的，容器事务大多是基于JTA完成，这是一个基于JNDI的，相当复杂的API实现。
*/
    // 堆和栈
    //栈一般放内存地址  比如 arr1 = 0x11  堆放对象(0x01)->[1,2,3],数组也是对象,指针一般存放在栈空间,指向地址堆空间
    // 总结就是   堆中存放的是对象和数组。栈中存放的是基本数据类型和堆中对象的引用。
    // 栈 先进后出(链表也是先进后出,LinkList)   堆先进先出
    // 栈使用的是一级缓存， 他们通常都是被调用时处于存储空间中，调用完毕立即释放；
    // 堆是存放在二级缓存中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收）。所以调用这些对象的速度要相对来得低一些。

    // 线程哪几种状态
    // new , start(Runnable就绪,等待cpu分资源) , run运行, interuppt,dead(run结束或者抛出异常)
    // linux 一些命令


    //http和rpc的区别
    //osi七层
   /* 第一层：应用层。定义了用于在网络中进行通信和传输数据的接口。

    第二层：表示层。定义不同的系统中数据的传输格式，编码和解码规范等。

    第三层：会话层。管理用户的会话，控制用户间逻辑连接的建立和中断。

    第四层：传输层。管理着网络中的端到端的数据传输。

    第五层：网络层。定义网络设备间如何传输数据。

    第六层：链路层。将上面的网络层的数据包封装成数据帧，便于物理层传输。

    第七层：物理层。这一层主要就是传输这些二进制数据。*/


}
