package com.yukicris.Thread.ThreadDay6;

public class Knowledge {
    //线程礼让
    /**
     * 礼让线程,让当前正在执行的线程暂停,但是不阻塞
     * 将线程从运行状态转为就绪状态
     * 让cpu重新调度,礼让不一定成功,看cpu心情
     */

    //join
    //join合并线程,待此线程执行完后,再执行其他线程,其他线程阻塞
    //可以想象成插队


    //线程状态观测
    //Thread.State;
  /**  线程可以处于以下状态之一
    new
    尚未启动的线程处于此状态

    Runnable
    在java虚拟机中执行的线程处于此状态

    Blocked
    被阻塞等待监视器锁定的状态处于此状态

    Waitting
    正在等待另一个线程执行特定动作的线程处于此状态

    Timed_waitting
    正在等待另一个线程执行动作达到指定等待时间的线程处于此状态

    Terminated
    已退出的线程处于此状态
   */


  //线程优先级
    /**
     * Java 提供一个线程调度器来监控程序中启动后进入就绪状态的所有线程,线程调度器
     * 按照优先级决定应该调度哪个线程来执行
     *
     * 线程的优先级用数字表示,范围从1~10
     * 优先级低只是意味着获得调度的概率低,并不是优先级低就不会被调用,看cpu调度
     *
     * 默认一般都是5
     */


    //守护线程(Daemon)
    /**
     * 线程分为用户线程和守护线程
     * 虚拟机必须保证用户线程执行完毕
     * 虚拟机不用等待守护线程执行完毕
     * 如,后台操作日志,监控内存,垃圾回收GC
     *
     * 要等到用户线程跑完,守护线程才会执行完毕
     */



}
